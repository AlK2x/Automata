Nonterminals useless in grammar

   expression_list


Terminals unused in grammar

   THEN
   WHILE
   LET
   EOL


Rules useless in grammar

   26 expression_list: /* empty */
   27                | exp ';'
   28                | expression_list ';' exp


State 0 conflicts: 1 shift/reduce
State 31 conflicts: 2 shift/reduce
State 32 conflicts: 2 shift/reduce
State 33 conflicts: 2 shift/reduce
State 45 conflicts: 7 shift/reduce
State 46 conflicts: 7 shift/reduce
State 47 conflicts: 2 shift/reduce
State 48 conflicts: 2 shift/reduce
State 49 conflicts: 2 shift/reduce
State 50 conflicts: 2 shift/reduce
State 51 conflicts: 2 shift/reduce


Grammar

    0 $accept: declaration_list $end

    1 declaration_list: /* empty */
    2                 | declaration ';'
    3                 | declaration_list declaration ';'

    4 declaration: function_declaration

    5 function_declaration: FUNCTION '(' ')' '{' statement_list '}'

    6 statement_list: /* empty */
    7               | statement ';'
    8               | statement_list ';' statement

    9 statement: ID '=' exp
   10          | PRINT exp
   11          | IF '(' exp ')' '{' statement_list '}'
   12          | IF '(' exp ')' '{' statement_list '}' ELSE '{' statement_list '}'

   13 exp: '(' exp ')'
   14    | exp '+' exp
   15    | exp '-' exp
   16    | exp '*' exp
   17    | exp '/' exp
   18    | exp '<' exp
   19    | exp EQUAL exp
   20    | exp NOTEQUAL exp
   21    | '-' exp
   22    | '+' exp
   23    | '!' exp
   24    | NUMBER
   25    | ID


Terminals, with rules where they appear

$end (0) 0
'!' (33) 23
'(' (40) 5 11 12 13
')' (41) 5 11 12 13
'*' (42) 16
'+' (43) 14 22
'-' (45) 15 21
'/' (47) 17
';' (59) 2 3 7 8
'<' (60) 18
'=' (61) 9
'{' (123) 5 11 12
'}' (125) 5 11 12
error (256)
NUMBER (258) 24
ID (259) 9 25
IF (260) 11 12
THEN (261)
ELSE (262) 12
WHILE (263)
LET (264)
FUNCTION (265) 5
EQUAL (266) 19
NOTEQUAL (267) 20
PRINT (268) 10
EOL (269)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
declaration_list (28)
    on left: 1 2 3, on right: 0 3
declaration (29)
    on left: 4, on right: 2 3
function_declaration (30)
    on left: 5, on right: 4
statement_list (31)
    on left: 6 7 8, on right: 5 8 11 12
statement (32)
    on left: 9 10 11 12, on right: 7 8
exp (33)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25, on right: 9 10
    11 12 13 14 15 16 17 18 19 20 21 22 23


State 0

    0 $accept: . declaration_list $end
    1 declaration_list: .  [$end, FUNCTION]
    2                 | . declaration ';'
    3                 | . declaration_list declaration ';'
    4 declaration: . function_declaration
    5 function_declaration: . FUNCTION '(' ')' '{' statement_list '}'

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 1 (declaration_list)]
    $default  reduce using rule 1 (declaration_list)

    declaration_list      go to state 2
    declaration           go to state 3
    function_declaration  go to state 4


State 1

    5 function_declaration: FUNCTION . '(' ')' '{' statement_list '}'

    '('  shift, and go to state 5


State 2

    0 $accept: declaration_list . $end
    3 declaration_list: declaration_list . declaration ';'
    4 declaration: . function_declaration
    5 function_declaration: . FUNCTION '(' ')' '{' statement_list '}'

    $end      shift, and go to state 6
    FUNCTION  shift, and go to state 1

    declaration           go to state 7
    function_declaration  go to state 4


State 3

    2 declaration_list: declaration . ';'

    ';'  shift, and go to state 8


State 4

    4 declaration: function_declaration .

    $default  reduce using rule 4 (declaration)


State 5

    5 function_declaration: FUNCTION '(' . ')' '{' statement_list '}'

    ')'  shift, and go to state 9


State 6

    0 $accept: declaration_list $end .

    $default  accept


State 7

    3 declaration_list: declaration_list declaration . ';'

    ';'  shift, and go to state 10


State 8

    2 declaration_list: declaration ';' .

    $default  reduce using rule 2 (declaration_list)


State 9

    5 function_declaration: FUNCTION '(' ')' . '{' statement_list '}'

    '{'  shift, and go to state 11


State 10

    3 declaration_list: declaration_list declaration ';' .

    $default  reduce using rule 3 (declaration_list)


State 11

    5 function_declaration: FUNCTION '(' ')' '{' . statement_list '}'
    6 statement_list: .  [';', '}']
    7               | . statement ';'
    8               | . statement_list ';' statement
    9 statement: . ID '=' exp
   10          | . PRINT exp
   11          | . IF '(' exp ')' '{' statement_list '}'
   12          | . IF '(' exp ')' '{' statement_list '}' ELSE '{' statement_list '}'

    ID     shift, and go to state 12
    IF     shift, and go to state 13
    PRINT  shift, and go to state 14

    $default  reduce using rule 6 (statement_list)

    statement_list  go to state 15
    statement       go to state 16


State 12

    9 statement: ID . '=' exp

    '='  shift, and go to state 17


State 13

   11 statement: IF . '(' exp ')' '{' statement_list '}'
   12          | IF . '(' exp ')' '{' statement_list '}' ELSE '{' statement_list '}'

    '('  shift, and go to state 18


State 14

   10 statement: PRINT . exp
   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 25


State 15

    5 function_declaration: FUNCTION '(' ')' '{' statement_list . '}'
    8 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 26
    '}'  shift, and go to state 27


State 16

    7 statement_list: statement . ';'

    ';'  shift, and go to state 28


State 17

    9 statement: ID '=' . exp
   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 29


State 18

   11 statement: IF '(' . exp ')' '{' statement_list '}'
   12          | IF '(' . exp ')' '{' statement_list '}' ELSE '{' statement_list '}'
   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 30


State 19

   24 exp: NUMBER .

    $default  reduce using rule 24 (exp)


State 20

   25 exp: ID .

    $default  reduce using rule 25 (exp)


State 21

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   23    | '!' . exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 31


State 22

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   22    | '+' . exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 32


State 23

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   21    | '-' . exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 33


State 24

   13 exp: . '(' exp ')'
   13    | '(' . exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 34


State 25

   10 statement: PRINT exp .  [';', '}']
   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    $default  reduce using rule 10 (statement)


State 26

    8 statement_list: statement_list ';' . statement
    9 statement: . ID '=' exp
   10          | . PRINT exp
   11          | . IF '(' exp ')' '{' statement_list '}'
   12          | . IF '(' exp ')' '{' statement_list '}' ELSE '{' statement_list '}'

    ID     shift, and go to state 12
    IF     shift, and go to state 13
    PRINT  shift, and go to state 14

    statement  go to state 42


State 27

    5 function_declaration: FUNCTION '(' ')' '{' statement_list '}' .

    $default  reduce using rule 5 (function_declaration)


State 28

    7 statement_list: statement ';' .

    $default  reduce using rule 7 (statement_list)


State 29

    9 statement: ID '=' exp .  [';', '}']
   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    $default  reduce using rule 9 (statement)


State 30

   11 statement: IF '(' exp . ')' '{' statement_list '}'
   12          | IF '(' exp . ')' '{' statement_list '}' ELSE '{' statement_list '}'
   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41
    ')'       shift, and go to state 43


State 31

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp
   23    | '!' exp .  [EQUAL, NOTEQUAL, '+', '-', ';', ')', '}']

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 23 (exp)]
    NOTEQUAL  [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)

    Conflict between rule 23 and token '+' resolved as reduce (%left '+').
    Conflict between rule 23 and token '-' resolved as reduce (%left '-').
    Conflict between rule 23 and token '*' resolved as shift ('!' < '*').
    Conflict between rule 23 and token '/' resolved as shift ('!' < '/').
    Conflict between rule 23 and token '<' resolved as shift ('!' < '<').


State 32

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp
   22    | '+' exp .  [EQUAL, NOTEQUAL, '+', '-', ';', ')', '}']

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 22 (exp)]
    NOTEQUAL  [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)

    Conflict between rule 22 and token '+' resolved as reduce (%left '+').
    Conflict between rule 22 and token '-' resolved as reduce (%left '-').
    Conflict between rule 22 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 22 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 22 and token '<' resolved as shift ('+' < '<').


State 33

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp
   21    | '-' exp .  [EQUAL, NOTEQUAL, '+', '-', ';', ')', '}']

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 21 (exp)]
    NOTEQUAL  [reduce using rule 21 (exp)]
    $default  reduce using rule 21 (exp)

    Conflict between rule 21 and token '+' resolved as reduce (%left '+').
    Conflict between rule 21 and token '-' resolved as reduce (%left '-').
    Conflict between rule 21 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 21 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 21 and token '<' resolved as shift ('-' < '<').


State 34

   13 exp: '(' exp . ')'
   14    | exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41
    ')'       shift, and go to state 44


State 35

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   19    | exp EQUAL . exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 45


State 36

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   20    | exp NOTEQUAL . exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 46


State 37

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   14    | exp '+' . exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 47


State 38

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   15    | exp '-' . exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 48


State 39

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   16    | exp '*' . exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 49


State 40

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   17    | exp '/' . exp
   18    | . exp '<' exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 50


State 41

   13 exp: . '(' exp ')'
   14    | . exp '+' exp
   15    | . exp '-' exp
   16    | . exp '*' exp
   17    | . exp '/' exp
   18    | . exp '<' exp
   18    | exp '<' . exp
   19    | . exp EQUAL exp
   20    | . exp NOTEQUAL exp
   21    | . '-' exp
   22    | . '+' exp
   23    | . '!' exp
   24    | . NUMBER
   25    | . ID

    NUMBER  shift, and go to state 19
    ID      shift, and go to state 20
    '!'     shift, and go to state 21
    '+'     shift, and go to state 22
    '-'     shift, and go to state 23
    '('     shift, and go to state 24

    exp  go to state 51


State 42

    8 statement_list: statement_list ';' statement .

    $default  reduce using rule 8 (statement_list)


State 43

   11 statement: IF '(' exp ')' . '{' statement_list '}'
   12          | IF '(' exp ')' . '{' statement_list '}' ELSE '{' statement_list '}'

    '{'  shift, and go to state 52


State 44

   13 exp: '(' exp ')' .

    $default  reduce using rule 13 (exp)


State 45

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   19    | exp EQUAL exp .  [EQUAL, NOTEQUAL, '+', '-', '*', '/', '<', ';', ')', '}']
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 19 (exp)]
    NOTEQUAL  [reduce using rule 19 (exp)]
    '+'       [reduce using rule 19 (exp)]
    '-'       [reduce using rule 19 (exp)]
    '*'       [reduce using rule 19 (exp)]
    '/'       [reduce using rule 19 (exp)]
    '<'       [reduce using rule 19 (exp)]
    $default  reduce using rule 19 (exp)


State 46

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp
   20    | exp NOTEQUAL exp .  [EQUAL, NOTEQUAL, '+', '-', '*', '/', '<', ';', ')', '}']

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 20 (exp)]
    NOTEQUAL  [reduce using rule 20 (exp)]
    '+'       [reduce using rule 20 (exp)]
    '-'       [reduce using rule 20 (exp)]
    '*'       [reduce using rule 20 (exp)]
    '/'       [reduce using rule 20 (exp)]
    '<'       [reduce using rule 20 (exp)]
    $default  reduce using rule 20 (exp)


State 47

   14 exp: exp . '+' exp
   14    | exp '+' exp .  [EQUAL, NOTEQUAL, '+', '-', ';', ')', '}']
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 14 (exp)]
    NOTEQUAL  [reduce using rule 14 (exp)]
    $default  reduce using rule 14 (exp)

    Conflict between rule 14 and token '+' resolved as reduce (%left '+').
    Conflict between rule 14 and token '-' resolved as reduce (%left '-').
    Conflict between rule 14 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 14 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 14 and token '<' resolved as shift ('+' < '<').


State 48

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   15    | exp '-' exp .  [EQUAL, NOTEQUAL, '+', '-', ';', ')', '}']
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '*'       shift, and go to state 39
    '/'       shift, and go to state 40
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 15 (exp)]
    NOTEQUAL  [reduce using rule 15 (exp)]
    $default  reduce using rule 15 (exp)

    Conflict between rule 15 and token '+' resolved as reduce (%left '+').
    Conflict between rule 15 and token '-' resolved as reduce (%left '-').
    Conflict between rule 15 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 15 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 15 and token '<' resolved as shift ('-' < '<').


State 49

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   16    | exp '*' exp .  [EQUAL, NOTEQUAL, '+', '-', '*', '/', ';', ')', '}']
   17    | exp . '/' exp
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 16 (exp)]
    NOTEQUAL  [reduce using rule 16 (exp)]
    $default  reduce using rule 16 (exp)

    Conflict between rule 16 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 16 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 16 and token '*' resolved as reduce (%left '*').
    Conflict between rule 16 and token '/' resolved as reduce (%left '/').
    Conflict between rule 16 and token '<' resolved as shift ('*' < '<').


State 50

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   17    | exp '/' exp .  [EQUAL, NOTEQUAL, '+', '-', '*', '/', ';', ')', '}']
   18    | exp . '<' exp
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36
    '<'       shift, and go to state 41

    EQUAL     [reduce using rule 17 (exp)]
    NOTEQUAL  [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)

    Conflict between rule 17 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 17 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 17 and token '*' resolved as reduce (%left '*').
    Conflict between rule 17 and token '/' resolved as reduce (%left '/').
    Conflict between rule 17 and token '<' resolved as shift ('/' < '<').


State 51

   14 exp: exp . '+' exp
   15    | exp . '-' exp
   16    | exp . '*' exp
   17    | exp . '/' exp
   18    | exp . '<' exp
   18    | exp '<' exp .  [EQUAL, NOTEQUAL, '+', '-', '*', '/', '<', ';', ')', '}']
   19    | exp . EQUAL exp
   20    | exp . NOTEQUAL exp

    EQUAL     shift, and go to state 35
    NOTEQUAL  shift, and go to state 36

    EQUAL     [reduce using rule 18 (exp)]
    NOTEQUAL  [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)

    Conflict between rule 18 and token '+' resolved as reduce ('+' < '<').
    Conflict between rule 18 and token '-' resolved as reduce ('-' < '<').
    Conflict between rule 18 and token '*' resolved as reduce ('*' < '<').
    Conflict between rule 18 and token '/' resolved as reduce ('/' < '<').
    Conflict between rule 18 and token '<' resolved as reduce (%left '<').


State 52

    6 statement_list: .  [';', '}']
    7               | . statement ';'
    8               | . statement_list ';' statement
    9 statement: . ID '=' exp
   10          | . PRINT exp
   11          | . IF '(' exp ')' '{' statement_list '}'
   11          | IF '(' exp ')' '{' . statement_list '}'
   12          | . IF '(' exp ')' '{' statement_list '}' ELSE '{' statement_list '}'
   12          | IF '(' exp ')' '{' . statement_list '}' ELSE '{' statement_list '}'

    ID     shift, and go to state 12
    IF     shift, and go to state 13
    PRINT  shift, and go to state 14

    $default  reduce using rule 6 (statement_list)

    statement_list  go to state 53
    statement       go to state 16


State 53

    8 statement_list: statement_list . ';' statement
   11 statement: IF '(' exp ')' '{' statement_list . '}'
   12          | IF '(' exp ')' '{' statement_list . '}' ELSE '{' statement_list '}'

    ';'  shift, and go to state 26
    '}'  shift, and go to state 54


State 54

   11 statement: IF '(' exp ')' '{' statement_list '}' .  [';', '}']
   12          | IF '(' exp ')' '{' statement_list '}' . ELSE '{' statement_list '}'

    ELSE  shift, and go to state 55

    $default  reduce using rule 11 (statement)


State 55

   12 statement: IF '(' exp ')' '{' statement_list '}' ELSE . '{' statement_list '}'

    '{'  shift, and go to state 56


State 56

    6 statement_list: .  [';', '}']
    7               | . statement ';'
    8               | . statement_list ';' statement
    9 statement: . ID '=' exp
   10          | . PRINT exp
   11          | . IF '(' exp ')' '{' statement_list '}'
   12          | . IF '(' exp ')' '{' statement_list '}' ELSE '{' statement_list '}'
   12          | IF '(' exp ')' '{' statement_list '}' ELSE '{' . statement_list '}'

    ID     shift, and go to state 12
    IF     shift, and go to state 13
    PRINT  shift, and go to state 14

    $default  reduce using rule 6 (statement_list)

    statement_list  go to state 57
    statement       go to state 16


State 57

    8 statement_list: statement_list . ';' statement
   12 statement: IF '(' exp ')' '{' statement_list '}' ELSE '{' statement_list . '}'

    ';'  shift, and go to state 26
    '}'  shift, and go to state 58


State 58

   12 statement: IF '(' exp ')' '{' statement_list '}' ELSE '{' statement_list '}' .

    $default  reduce using rule 12 (statement)
